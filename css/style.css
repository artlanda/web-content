/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/



* {  /*universal selector*/
    
    margin: 0;
    padding: 0;
    box-sizing: border-box;  /*changes the box for model borders or padding no longer edit for a total weight or heigh of a box*/
        
}

body {  /*font definition font is getting inheriti*/
    
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;  /*padding is not getting inheriti */
    
}

.header {
    
    height: 95vh;  /*95 % of the view*/
    background-image:
        linear-gradient(to right bottom ,rgba(126,213,111,0.8),rgba(40,180,131,0.8)),
        url(../img/hero.jpg);
    background-size: cover;  /*fit the element inside of the box*/
    background-position: top;
    position: relative;
    
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /*formas en https://bennettfeely.com/clippy/  */
    
}

.logo-box {
    
    position: absolute;
    top: 40px;    /*apartir de la posicion relativa de su padre*/
    left: 40px;   /*apartir de la posicion relativa de su padre*/
    
}

.logo {
    
    height: 35px;
    
}


.text-box {
    
    position: absolute;
    top: 40%;   /*40 % en relacion al padre*/
    left: 50%;  /*50 % en relacion al padre*/
    transform: translate(-50%, -50%);/*50% en relacion al elemento en si mismo y no al 50% en relacion al padre*/
    text-align: center;
    
}


.heading-primary {
    
    color: #fff;
    text-transform: uppercase;
    
    backface-visibility: hidden; /*el fondo de un elemento transformado esta escondido*/
    margin-bottom: 16px;
    
}

.heading-primary-main {
    
    display: block; /*block ocupa todo donde esta contenido y tiene salto de linea*/
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
    
    animation-name: moveInleft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    
    /*
    animation-delay: 3s;
    animation-iteration-count: 3;
    
    */
    
}

.heading-primary-sub {
    
    display: block;  /*block ocupa todo donde esta contenido y tiene salto de linea*/
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    
    animation: moveInRight 1s ease-out;
}

@keyframes moveInleft {
    
    0% { /*start animation*/
        opacity: 0;
        transform: translateX(-100px); /*a  la izq de su posicion*/
    }
    
    80% { /*almost the end animation*/
        transform: translateX(10px);
        
    }
    
    100% { /*end animation*/
        opacity: 1; 
        transform: translate(0); /*en su estado que luce sin animacion */
    }
    
}


@keyframes moveInRight {
    
    0% { /*start animation*/
        opacity: 0;
        transform: translateX(100px); /*a  la derecha de su posicion*/
    }
    
    
    
    80% { /*almost the end animation*/
        transform: translateX(-10px);
        
    }
    
    100% { /*end animation*/
        opacity: 1; 
        transform: translate(0); /*en su estado que luce sin animacion */
    }
    
}

@keyframes moveInBottom {
    
    0% { /*start animation*/
        opacity: 0;
        transform: translateY(30px); /*a  la derecha de su posicion*/
    }
    
    
    100% { /*end animation*/
        opacity: 1; 
        transform: translate(0); /*en su estado que luce sin animacion */
    }
    
}

.btn:link, .btn:visited { /*pseudo clases pasan en un estado del elemento, como hover*/
    
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;  
    border-radius: 100px;
    transition: all .2s; /*se especifica al principio de la animacion initial state*/
    position: relative; /*referencia del pseudo element btn::after*/
}

.btn:hover {
    
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2); /*x  y  blur  opacity*/
    
}

.btn:active {
    
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
    
}

.btn-white {
    
    background-color: #fff;
    color: #777;
    
}

.btn::after {/* pseudo element add virtual or hidden elements rihght after the element that we are selecting and we can style that pseudo element*/

    content: ""; /*always specify content*/
    display: inline-block; /*cause btn is inline block by definition*/
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;/*absolute position needs a reference and will be the first elemert with relative position thah can find*/
    top: 0; /*0 px en relacion al padre*/
    left: 0; /*0 px en relacion al padre*/
    z-index: -1; /*define posisicones de los elementos uno arriba de otro -1 es atras */
    transition: all .4s;/*initial state*/

}

.btn-white::after {
    
    background-color: #fff;
    
}

.btn:hover::after { /*when we hover the botton THEN we want certain style for the pseudo elemen */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;  /*desaparecer elemento (invisible)*/
       
}

.btn-animated {
    
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards; /*manda el style de la animacion al 0% antes de que aparezca la animacion aqui para que el boton inicie desaparecido y luego la animacion entre*/
    
}
























